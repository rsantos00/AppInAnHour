<link rel="stylesheet" href="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.css" type="text/css">
<script src="https://atlas.microsoft.com/sdk/javascript/mapcontrol/2/atlas.min.js"></script>
<link rel="stylesheet" href="https://materializecss.com/css/ghpages-materialize.css" type="text/css">

<style>
.pin {
            
            position: absolute;
            left: 50%;
            top: 50%;
            margin: -20px 0 0 -20px;
        }

.pin:after {
             content: "";
             width: 14px;
             height: 14px;
             margin: 8px 0 0 8px;
             position: absolute;
             border-radius: 50%;
            }

.bounce {
            animation-name: bounce;
            animation-fill-mode: both;
            animation-duration: 1s;
        }

.pulse {
            background: #d6d4d4;
            border-radius: 50%;
            height: 14px;
            width: 14px;
            position: absolute;
            left: 50%;
            top: 50%;
            margin: 11px 0px 0px -12px;
            transform: rotateX(55deg);
            z-index: -2;
        }

.pulse:after {
                content: "";
                border-radius: 50%;
                height: 40px;
                width: 40px;
                position: absolute;
                margin: -13px 0 0 -13px;
                animation: pulsate 1s ease-out;
                animation-iteration-count: infinite;
                opacity: 0;
                box-shadow: 0 0 1px 2px #00cae9;
                animation-delay: 1.1s;
            }

@keyframes pulsate {
            0% {
                transform: scale(0.1, 0.1);
                opacity: 0;
            }

            50% {
                opacity: 1;
            }

            100% {
                transform: scale(1.2, 1.2);
                opacity: 0;
            }
                  }

@keyframes bounce {
            0% {
                opacity: 0;
                transform: translateY(-2000px) ;
            }

            60% {
                opacity: 1;
                transform: translateY(30px) ;
            }

            80% {
                transform: translateY(-10px) ;
            }

            100% {
                transform: translateY(0) ;
  }}
</style>
<script type="text/javascript">
  var map, marker, radius = 20,controls = [];
  
  var flowResponse={
    data:[],
    typeahead:[]
  };
  var typeaheaddd=[];

  fetch('https://prod-64.westeurope.logic.azure.com:443/workflows/2ce9048b8897418089c69fa3a6ee7b02/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QFJ4XvmjNHiqdi1uJhB-8ak52FXn4uH5EREm6LCZfpY')
    .then(response => response.json())
    .then(json => {
        flowResponse = json; typeaheaddd=json.typeahead;
    });


    // fetch('https://prod-64.westeurope.logic.azure.com:443/workflows/2ce9048b8897418089c69fa3a6ee7b02/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QFJ4XvmjNHiqdi1uJhB-8ak52FXn4uH5EREm6LCZfpY')
    // .then(response => response.json())
    // .then(json => zoneAddress = json.data)

    var substringMatcher = function() {
    return function findMatches(q, cb) {
      var matches, substringRegex;
      // an array that will be populated with substring matches
      matches = [];
      // regex used to determine if a string contains the substring `q`
      substrRegex = new RegExp(q, 'i');
  
      // iterate through the pool of strings and for any string that
      // contains the substring `q`, add it to the `matches` array
      $.each(typeaheaddd, function(i, obj) {
        if (substrRegex.test(obj.Address)) {
          matches.push(obj);
        }
      });
      cb(matches);
    };
  };

  var center = {
    Lat: 0,
    Long: 0
  };
  //var url = 'https://adtokens.azurewebsites.net/api/HttpTrigger1?code=dv9Xz4tZQthdufbocOV9RLaaUhQoegXQJSeQQckm6DZyG/1ymppSoQ==';
  window.addEventListener("load", function() {
    var mapp = document.getElementsByName("myMap")[0];
    mapp.id = "myMap";
    if (navigator.geolocation) {
      var position = navigator.geolocation.getCurrentPosition(function(position) {
        center.Lat = position.coords.latitude;
        center.Long = position.coords.longitude;
        //GetMap();
      });
    } else {
      alert("Geolocation is not supported by this browser.");
    }
  });
  function GetMap() {
    map = new atlas.Map('myMap', {
      view: 'Auto',
      zoom: 12,
      style: "satellite",
      center: [center.Long, center.Lat],
      //Add your Azure Maps subscription key to the map SDK. Get an Azure Maps key at https://azure.com/maps
      authOptions: {
        authType: 'subscriptionKey',
        subscriptionKey: 'the key here'
      }
      // authOptions: {
      //     authType: "anonymous",
      //     clientId: "35267128-0f1e-41de-aa97-f7a7ec8c2dbd",
      //     getToken: function (resolve, reject, map) {
      //         fetch(url).then(function (response) {
      //             return response.text();
      //         }).then(function (token) {
      //             resolve(token);
      //         });
      //     }
      // }
    });
    //Wait until the map resources are ready.
    map.events.add('ready', function() {
      //Wait until the map resources are ready.
      /* Construct and add a compass control*/
      var compassControl = new atlas.control.CompassControl();
      map.controls.add(compassControl, {
        position: "bottom-right"
      });
      /* Construct and add a zoom control*/
      var zoomControl = new atlas.control.ZoomControl();
      map.controls.add(zoomControl, {
        position: "bottom-right"
      });
      /* Construct and add a pitch control*/
      var pitchControl = new atlas.control.PitchControl();
      map.controls.add(pitchControl, {
        position: "bottom-right"
      });
      /* Construct and add a style control*/
      var styleControl = new atlas.control.StyleControl();
      map.controls.add(styleControl, {
        position: "bottom-right"
      })
      //Create a HTML marker and add it to the map.
      flowResponse.data.forEach(element => {
        var marker = new atlas.HtmlMarker({
          htmlContent: "<div><div class='pin bounce'><img class='circleImage' height='25' src='https://image.flaticon.com/icons/png/512/1026/1026920.png'/> </div><div class='pulse'></div></div>",
          position: [element.long, element.lat],
          popup: new atlas.Popup({
            content: '<div style="padding:10px">Hello World</div>',
            pixelOffset: [0, -30]
          })
        });
        map.markers.add(marker);
        //Add a click event to toggle the popup.
        map.events.add('click', marker, () => {
          marker.togglePopup();
        });
      });
    });
  }
  function addControls() {
    //Remove all controls on the map.
    map.controls.remove(controls);
    controls = [];
    //Get input options.
    var positionOption = getSelectValue('controlPosition');
    var controlStyle = getSelectValue('controlStyle');
    //Create a zoom control.
    controls.push(new atlas.control.ZoomControl({
      zoomDelta: 5,
      style: controlStyle
    }));
    //Create a pitch control and add it to the map.
    // controls.push(new atlas.control.PitchControl({
    //   pitchDegreesDelta: 15,
    //   style: controlStyle
    // }));
    //Create a compass control and add it to the map.
    controls.push(new atlas.control.CompassControl({
      rotationDegreesDelta: 15,
      style: controlStyle
    }));
    //Create a style control and add it to the map.
    controls.push(new atlas.control.StyleControl({
      style: controlStyle
    }));
    //Add controls to the map.
    map.controls.add(controls, {
      position: positionOption
    });
  }
  function getSelectValue(id) {
    var elm = document.getElementById(id);
    return elm.options[elm.selectedIndex].value;
  }
  function positionOnCircle(angle) {
    //Calculate the position on a circle for an angle of animation.
    return [
      Math.cos(angle) * radius,
      Math.sin(angle) * radius
    ];
  }
  function animateMarker(timestamp) {
    //Update the position of the marker for the animation frame.
    marker.setOptions({
      position: positionOnCircle(timestamp / 1000)
    });
    //Request the next frame of the animation.
    requestAnimationFrame(animateMarker);
  }
</script>
<script>
  function contextProvider() {
    //Here it is assumed that the corresponding work stream would have context variables with logical name of 'contextKey1', 'contextKey2', 'contextKey3'. If no context variable exists with a matching logical name, items are created assuming Type:string               
    return {
      'contextKey1': 'contextValue1', // string value
      'contextKey2': 12.34, // number value
      'contextKey3': true // boolean value
    };
  }
  window.addEventListener("lcw:ready", function handleLivechatReadyEvent() {
    // Handle LiveChat Ready event
    // SDK methods are ready for use now
    // Setting custom context provider to be used with Chat for Dynamics 365
    // The custom context provided by custom context provider can be used for routing the chat to a particular queue
    Microsoft.Omnichannel.LiveChatWidget.SDK.setContextProvider(contextProvider);
    // Starting a new chat
    Microsoft.Omnichannel.LiveChatWidget.SDK.startChat();
  });
  window.addEventListener("lcw:error", function handleLivechatErrorEvent(errorEvent) {
    // Handle LiveChat SDK error event
    console.log(errorEvent);
  });
</script>

  <script src="https://twitter.github.io/typeahead.js/releases/latest/typeahead.bundle.js"></script>
  <script src="https://twitter.github.io/typeahead.js/js/handlebars.js"></script>

<style>

/* site theme */
/* ---------- */

.title {
  margin: 20px 0 0 0;
  font-size: 64px;
}

.example {
  padding: 30px 0;
}

.example-name {
  margin: 20px 0;
  font-size: 32px;
}

.demo {
  position: relative;
  *z-index: 1;
  margin: 50px 0;
}

.typeahead,
.tt-query,
.tt-hint {
  width: 396px;
  height: 30px;
  padding: 8px 12px;
  font-size: 24px;
  line-height: 30px;
  border: 2px solid #ccc;
  -webkit-border-radius: 8px;
     -moz-border-radius: 8px;
          border-radius: 8px;
  outline: none;
}

.typeahead {
  background-color: #fff;
}

.typeahead:focus {
  border: 2px solid #0097cf;
}

.tt-query {
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
     -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

.tt-hint {
  color: #999
}

.tt-menu {
  width: 422px;
  margin: 12px 0;
  padding: 8px 0;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.2);
  -webkit-border-radius: 8px;
     -moz-border-radius: 8px;
          border-radius: 8px;
  -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
     -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
          box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.tt-suggestion {
  padding: 3px 20px;
  font-size: 18px;
  line-height: 24px;
}

.tt-suggestion:hover {
  cursor: pointer;
  color: #fff;
  background-color: #0097cf;
}

.tt-suggestion.tt-cursor {
  color: #fff;
  background-color: #0097cf;

}

.tt-suggestion p {
  margin: 0;
}

.gist {
  font-size: 14px;
}

/* example specific styles */
/* ----------------------- */

#custom-templates .empty-message {
  padding: 5px 10px;
 text-align: center;
}

#multiple-datasets .league-name {
  margin: 0 20px 5px 20px;
  padding: 3px 0;
  border-bottom: 1px solid #ccc;
}

#scrollable-dropdown-menu .tt-menu {
  max-height: 150px;
  overflow-y: auto;
}

#rtl-support .tt-menu {
  text-align: right;
}
</style>


<!-- Add references to the Azure Maps Map control JavaScript and CSS files. -->
<!-- <ul class="radio-button-group-cs-demo transportation-mode">
  <li><input type="radio" data-type="pedestrian" name="transportationMode" value="pedestrian" class="searchParameter"><label for="pedestrian" class="button default-button button-tiny"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/pedestrian.svg" alt="Walk"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/pedestrian-selected.svg" alt="Walk" class="hide"></label></li>
  <li><input type="radio" data-type="bicycle" name="transportationMode" value="bicycle" class="searchParameter"><label for="bicycle" class="button default-button button-tiny"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/bicycle.svg" alt="Bike"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/bicycle-selected.svg" alt="Bike" class="hide"></label></li>
  <li><input type="radio" data-type="car" name="transportationMode" value="car" class="searchParameter"><label for="car" class="button default-button button-tiny"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/car.svg" alt="Car"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/car-selected.svg" alt="Car" class="hide"></label></li>
  <li><input type="radio" data-type="truck" name="transportationMode" aria-selected="aria-selected" checked="" value="truck" class="searchParameter"><label for="truck" class="button default-button button-tiny selected-button"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/truck.svg" alt="Truck" class="hide"><img src="//azurecomcdn.azureedge.net/cvt-c191e88b2ea2c29a1e217f6755fc411852012020d68300b7638f7e83776db740/images/page/services/azure-maps/truck-selected.svg" alt="Truck"></label></li>
</ul> -->



<div id="the-basics">
    <input class="typeahead" type="text" placeholder="Your address">
</div>

<div class="card large" id="contactCard" style="visibility: hidden;">
    <div class="card-image">
      <img src="https://materializecss.com/images/sample-1.jpg">
      <span class="card-title" id="cardTitle">Title</span>
    </div>
    <div class="card-content">
      <span id="cardContentText">Information.</span>
    </div>
    <div class="card-action" id="cardLink">
      
    </div>
  </div>
  
<script>
           
    $('#the-basics .typeahead').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    },
    {
    // name: 'bestMovies',
        display: 'Address',
        limit:10,
        source: substringMatcher(),
        templates: {
            empty: [
                    '<div class="empty-message">',
                        'Cant find any result',
                    '</div>'
                    ].join('\n'),   
            suggestion: function(data) {
                return '<p><strong>' + data.Address + '</strong> -'+ data.Zone+'</p>';
                }
        }
    });

    $('.typeahead').on('typeahead:selected', function(evt, item) {
         console.log(item);
         
         //$("#cardLink").text("");
         //$('.contactCard').style="visibility:hidden";
         $("#contactCard").css("visibility", "visible");
         //$('#contactCard').show();
         $("#cardTitle").html("" + item.Address);         
         $("#cardContentText").html("" + item.Address);
         
     });
  
  
  
</script>

<div class="row sectionBlockLayout" style="display: flex; flex-wrap: wrap; text-align: left; min-height: 100px; padding: 8px; margin: 0px;">
  <div class="container" style="display: flex; flex-wrap: wrap;">
    <div class="col-md-12 columnBlockLayout" style="display: flex; flex-direction: column;">
    </div>
    <div name="myMap" style="position: relative; width: 100%; min-width: 290px; height: 600px;"></div>
    <fieldset style="width: calc(100% - 30px); min-width: 290px; margin-top: 10px;">
    </fieldset>
  </div>
</div>
